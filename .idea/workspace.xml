<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="2464c503-bdf1-437d-bb86-0459f2299ca3" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/../Nakama/match/math/vector.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/../Nakama/match/math/vector_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/../Nakama/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../Nakama/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/build/index.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/daily_rewards.lua" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/daily_rewards.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/local.yml" beforeDir="false" afterPath="$PROJECT_DIR$/../Nakama/local.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/../Nakama/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/main.lua" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/main.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/match_handler.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/match_rpc.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/messages.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../Nakama/tsconfig.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/Server.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Server.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/modules.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Color.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Color.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Equipment.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Equipment.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Monster.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Monster.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Vec3.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Vec3.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Weapon.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/flatBuffer/Sample/Weapon.go" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/local.yml" beforeDir="false" afterPath="$PROJECT_DIR$/local.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/constant.go" beforeDir="false" afterPath="$PROJECT_DIR$/match/constant.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/daily_rewards.go" beforeDir="false" afterPath="$PROJECT_DIR$/match/daily_rewards.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/healthcheck.go" beforeDir="false" afterPath="$PROJECT_DIR$/match/healthcheck.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/match.go" beforeDir="false" afterPath="$PROJECT_DIR$/match/match.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/session_events.go" beforeDir="false" afterPath="$PROJECT_DIR$/match/session_events.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/tools.go" beforeDir="false" afterPath="$PROJECT_DIR$/match/tools.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.18" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="1yQZ4e6PDkFJFzeYYMW9EF0GZr9" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="configurable..is.expanded" value="false" />
    <property name="configurable.GoLibrariesConfigurable.is.expanded" value="true" />
    <property name="go.format.on.save.advertiser.fired" value="true" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.vendoring.notification.had.been.shown" value="true" />
    <property name="go.watchers.conflict.with.on.save.actions.check.performed" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../Nakama" />
    <property name="settings.editor.selected.configurable" value="go.sdk" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Projects\Survival2D\Server" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Projects\Survival2D\Server\src\Sample" />
      <recent name="C:\Projects\Survival2D\Server\src" />
      <recent name="C:\Projects\Survival2D\Server\src\MyGame\Sample" />
      <recent name="C:\Projects\Survival2D\Server\src\MyGame" />
      <recent name="C:\Projects\Survival2D\Server" />
    </key>
  </component>
  <component name="RunManager">
    <configuration name="Survival2D" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="commandLineOptions" value="--build" />
          <option name="sourceFilePath" value="docker-compose.yml" />
          <option name="upForceRecreate" value="true" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.Survival2D" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
</project>