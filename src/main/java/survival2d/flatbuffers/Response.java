// automatically generated by the FlatBuffers compiler, do not modify

package survival2d.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Response extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static Response getRootAsResponse(ByteBuffer _bb) { return getRootAsResponse(_bb, new Response()); }
  public static Response getRootAsResponse(ByteBuffer _bb, Response obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Response __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte responseType() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public Table response(Table obj) { int o = __offset(6); return o != 0 ? __union(obj, o + bb_pos) : null; }

  public static int createResponse(FlatBufferBuilder builder,
      byte response_type,
      int responseOffset) {
    builder.startTable(2);
    Response.addResponse(builder, responseOffset);
    Response.addResponseType(builder, response_type);
    return Response.endResponse(builder);
  }

  public static void startResponse(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addResponseType(FlatBufferBuilder builder, byte responseType) { builder.addByte(0, responseType, 0); }
  public static void addResponse(FlatBufferBuilder builder, int responseOffset) { builder.addOffset(1, responseOffset, 0); }
  public static int endResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedResponseBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Response get(int j) { return get(new Response(), j); }
    public Response get(Response obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

