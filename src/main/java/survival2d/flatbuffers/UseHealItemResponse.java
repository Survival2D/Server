// automatically generated by the FlatBuffers compiler, do not modify

package survival2d.flatbuffers;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class UseHealItemResponse extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_12_0(); }
  public static UseHealItemResponse getRootAsUseHealItemResponse(ByteBuffer _bb) { return getRootAsUseHealItemResponse(_bb, new UseHealItemResponse()); }
  public static UseHealItemResponse getRootAsUseHealItemResponse(ByteBuffer _bb, UseHealItemResponse obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public UseHealItemResponse __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double remainHp() { int o = __offset(4); return o != 0 ? bb.getDouble(o + bb_pos) : 0.0; }

  public static int createUseHealItemResponse(FlatBufferBuilder builder,
      double remainHp) {
    builder.startTable(1);
    UseHealItemResponse.addRemainHp(builder, remainHp);
    return UseHealItemResponse.endUseHealItemResponse(builder);
  }

  public static void startUseHealItemResponse(FlatBufferBuilder builder) { builder.startTable(1); }
  public static void addRemainHp(FlatBufferBuilder builder, double remainHp) { builder.addDouble(0, remainHp, 0.0); }
  public static int endUseHealItemResponse(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public UseHealItemResponse get(int j) { return get(new UseHealItemResponse(), j); }
    public UseHealItemResponse get(UseHealItemResponse obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

