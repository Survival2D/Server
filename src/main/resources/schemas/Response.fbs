include "common.fbs";

namespace survival2d.flatbuffers;

table LoginResponse {
  userId: int;
  userName: string;
}

table GetUserInfoResponse {
}

table CreateTeamResponse {
  teamId: int;
}

table JoinTeamResponse {
  teamId: int;
}

table NewUserJoinTeamResponse {
  userId: int;
  userName: string;
}

table FindMatchResponse {
  matchId: int;
}

table GetConfigResponse {
}

table MatchInfoResponse {
  players: [PlayerTable];
  mapObjects: [MapObjectTable];
  safeZone: Vector2Struct;
}


table PlayerMoveResponse {
  playerId: int;
  position: Vector2Struct;
  rotation: double;
}


table PlayerChangeWeaponResponse {
  playerId: int;
  slot: byte;
}


table PlayerAttackResponse {
  playerId: int;
  position: Vector2Struct;
  slot: byte;
}


table PlayerDropItemResponse {
}

table CreateBulletOnMapResponse {
  bullet: BulletTable;
}

table CreateItemOnMapResponse {
  id: int;
  item: ItemUnion;
  position: Vector2Struct;
  rawPosition: Vector2Struct;
}

table StartGameResponse {
}

table EndGameResponse {
  winTeam: int;
}

table PlayerInfoResponse {
  hp: double;
  weapons: [WeaponTable];
  bullets: [BulletItemTable];
}

table ObstacleDestroyResponse {
  obstacleId: int;
}

table ObstacleTakeDamageResponse {
  obstacleId: int;
  remainHp: double;
}

table PlayerTakeDamageResponse {
  playerId: int;
  remainHp: double;
}

table PlayerDeadResponse {
  playerId: int;
}

table PlayerReloadWeaponResponse {
  gunType: GunTypeEnum;
  remainBulletsInGun: int;
  remainBullets: int;
}

table PlayerTakeItemResponse {
  playerId: int;
  itemOnMapId: int;
}

table NewSafeZoneResponse {
  safeZone: CircleStruct;
}

table SafeZoneMoveResponse {
  safeZone: CircleStruct;
}

table UseHealItemResponse {
  remainHp: double;
  itemType: byte;
  remainItem: int;
}

table PingResponse {}

table PingEmptyResponse {}

table PingByPlayerMoveResponse {
  playerId: int;
  position: Vector2Struct;
  rotation: double;
}

table PingByMatchInfoResponse {
  players: [PlayerTable];
  mapObjects: [MapObjectUnion];
  safeZone: Vector2Struct;
}

table SetAutoPlayResponse {
  enable: bool;
}

union ResponseUnion {
  LoginResponse,
  GetUserInfoResponse,
  CreateTeamResponse,
  JoinTeamResponse,
  NewUserJoinTeamResponse,
  FindMatchResponse,
  GetConfigResponse,
  MatchInfoResponse,
  PlayerMoveResponse,
  PlayerAttackResponse,
  PlayerInfoResponse,
  CreateBulletOnMapResponse,
  CreateItemOnMapResponse,
  ObstacleTakeDamageResponse,
  ObstacleDestroyResponse,
  PlayerTakeDamageResponse,
  PlayerDeadResponse,
  PlayerReloadWeaponResponse,
  PlayerChangeWeaponResponse,
  PlayerTakeItemResponse,
  StartGameResponse,
  EndGameResponse,
  NewSafeZoneResponse,
  SafeZoneMoveResponse,
  UseHealItemResponse,
  SetAutoPlayResponse,
  PingResponse,
  //Test ping
  PingEmptyResponse,
  PingByPlayerMoveResponse,
  PingByMatchInfoResponse,
}

table Response {
  error: ResponseErrorEnum = SUCCESS;
  response: ResponseUnion;
}

root_type Response;
